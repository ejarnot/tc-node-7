[{"/Users/truecoders/repos/node5/react_props_state/src/App.jsx":"1","/Users/truecoders/repos/tc-node-7/exercises/react/react_props_state/src/App.jsx":"2","/Users/truecoders/repos/tc-node-7/exercises/react/react_props_state/src/components/Box.jsx":"3"},{"size":534,"mtime":1637079612934,"results":"4","hashOfConfig":"5"},{"size":2423,"mtime":1649359379492,"results":"6","hashOfConfig":"7"},{"size":835,"mtime":1649359385028,"results":"8","hashOfConfig":"7"},{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vou9k2",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"15wchbc",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/truecoders/repos/node5/react_props_state/src/App.jsx",["16"],"/Users/truecoders/repos/tc-node-7/exercises/react/react_props_state/src/App.jsx",["17","18"],"import \"./App.css\";\nimport { Component } from \"react\";\nimport Box from \"./components/Box\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"App - Constructor\");\n\n    let boxes = [];\n    let numBoxes = 12;\n    for (let i = 1; i <= numBoxes; i++) {\n      boxes.push({\n        id: i,\n        color: `rgb(255, 255, 255)`,\n      });\n    }\n\n    // set default state\n    this.state = {\n      boxes,\n      paintColor: \"#FFFFFF\",\n    };\n\n    // bind methods to this\n    this.handleBoxClick = this.handleBoxClick.bind(this);\n    this.handleColorSelection = this.handleColorSelection.bind(this);\n    this.handleBoxRemoval = this.handleBoxRemoval.bind(this);\n  }\n\n  getRandomColor() {\n    return Math.round(Math.random() * 255);\n  }\n\n  getRandomRGB() {\n    return `rgb(${this.getRandomColor()}, ${this.getRandomColor()}, ${this.getRandomColor()})`;\n  }\n\n  handleBoxClick(event, id) {\n    let updatedBoxes = this.state.boxes.map((box) => {\n      if (box.id == id) {\n        box.color = this.state.paintColor;\n      }\n\n      return box;\n    });\n    this.setState({ boxes: updatedBoxes });\n  }\n\n  handleColorSelection(event) {\n    this.setState({ paintColor: event.target.value });\n  }\n\n  handleBoxRemoval(event, id) {\n    let filteredBoxes = this.state.boxes.filter((box) => box.id != id);\n    this.setState({ boxes: filteredBoxes });\n  }\n\n  componentDidMount() {\n    console.log(\"App - Mount\");\n  }\n\n  componentDidUpdate() {\n    console.log(\"App - Update\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"App - Unmount\");\n  }\n\n  render() {\n    console.log(\"App - Render\");\n\n    return (\n      <main\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          textAlign: \"center\",\n        }}\n      >\n        <h1>React: State and Props</h1>\n        <input\n          name=\"paintColor\"\n          id=\"paintColor\"\n          type=\"color\"\n          value={this.state.paintColor}\n          onChange={this.handleColorSelection}\n        />\n        <div className=\"App\">\n          {this.state.boxes.map((box) => {\n            return (\n              <Box\n                key={box.id}\n                id={box.id}\n                color={box.color}\n                onClick={this.handleBoxClick}\n                onDbClick={this.handle}\n              />\n            );\n          })}\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","/Users/truecoders/repos/tc-node-7/exercises/react/react_props_state/src/components/Box.jsx",[],{"ruleId":"19","severity":1,"message":"20","line":5,"column":3,"nodeType":"21","messageId":"22","endLine":11,"endColumn":4},{"ruleId":"23","severity":1,"message":"24","line":42,"column":18,"nodeType":"25","messageId":"26","endLine":42,"endColumn":20},{"ruleId":"23","severity":1,"message":"27","line":56,"column":65,"nodeType":"25","messageId":"26","endLine":56,"endColumn":67},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='."]