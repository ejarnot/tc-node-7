[{"/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/index.js":"1","/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/App.jsx":"2","/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/views/Home.jsx":"3","/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/utils/apiService.js":"4","/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/views/List.jsx":"5","/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/utils/data.js":"6","/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/utils/formatting.js":"7","/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/views/Item.jsx":"8"},{"size":197,"mtime":1649704011435,"results":"9","hashOfConfig":"10"},{"size":647,"mtime":1649782854685,"results":"11","hashOfConfig":"10"},{"size":490,"mtime":1651148397960,"results":"12","hashOfConfig":"10"},{"size":343,"mtime":1649705791478,"results":"13","hashOfConfig":"10"},{"size":809,"mtime":1649782410388,"results":"14","hashOfConfig":"10"},{"size":1380,"mtime":1649783378719,"results":"15","hashOfConfig":"10"},{"size":152,"mtime":1649782583638,"results":"16","hashOfConfig":"10"},{"size":1242,"mtime":1649783293554,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1apx4uw",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/index.js",[],["37","38"],"/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/App.jsx",[],"/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/views/Home.jsx",[],"/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/utils/apiService.js",[],"/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/views/List.jsx",["39"],"import { useState, useEffect } from \"react\";\nimport { apiService, GHIBLI_BASE_URL } from \"../utils/apiService\";\nimport { Link } from \"react-router-dom\";\nimport { urlSafe } from \"../utils/formatting\";\n\nfunction List({ path, title }) {\n  let [list, setList] = useState([]);\n\n  async function fetchList() {\n    let data = await apiService(GHIBLI_BASE_URL + path);\n    setList(data);\n  }\n\n  useEffect(() => {\n    fetchList();\n  }, [path]);\n\n  return (\n    <div>\n      <h1>\n        {title} {list.length}\n      </h1>\n      <ul>\n        {list.map((item) => {\n          return (\n            <li key={item.id}>\n              <Link to={`${urlSafe(item.id)}`}>\n                {item.name || item.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default List;\n","/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/utils/data.js",[],"/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/utils/formatting.js",[],"/Users/truecoders/repos/tc-node-7/exercises/react/react_routing/src/views/Item.jsx",["40"],"import { useState, useEffect } from \"react\";\nimport { apiService, GHIBLI_BASE_URL } from \"../utils/apiService\";\nimport { stripTopic } from \"../utils/formatting\";\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\n\nfunction Item({ values: { displayProperties } }) {\n  let [item, setItem] = useState(null);\n  let [hasLoaded, setHasLoaded] = useState(false);\n\n  let navigate = useNavigate();\n  let { id } = useParams();\n  let { pathname } = useLocation();\n\n  async function fetchItem() {\n    let data = await apiService(\n      GHIBLI_BASE_URL + `${stripTopic(pathname)}/${id}`\n    );\n    setItem(data);\n    setHasLoaded(true);\n  }\n\n  useEffect(() => {\n    fetchItem();\n  }, [id]);\n\n  if (hasLoaded) {\n    return (\n      <div>\n        <button onClick={() => navigate(-1)}>Back</button>\n        <h1>{item.name || item.title}</h1>\n        <table>\n          <tbody>\n            {displayProperties.map((prop) => {\n              return (\n                <tr key={prop}>\n                  <td>{prop}</td>\n                  <td>{item[prop]}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  } else {\n    return <span>Loading...</span>;\n  }\n}\n\nexport default Item;\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":16,"column":6,"nodeType":"47","endLine":16,"endColumn":12,"suggestions":"48"},{"ruleId":"45","severity":1,"message":"49","line":24,"column":6,"nodeType":"47","endLine":24,"endColumn":10,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchList'. Either include it or remove the dependency array.","ArrayExpression",["53"],"React Hook useEffect has a missing dependency: 'fetchItem'. Either include it or remove the dependency array.",["54"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},{"desc":"57","fix":"58"},"Update the dependencies array to be: [fetchList, path]",{"range":"59","text":"60"},"Update the dependencies array to be: [fetchItem, id]",{"range":"61","text":"62"},[427,433],"[fetchList, path]",[692,696],"[fetchItem, id]"]